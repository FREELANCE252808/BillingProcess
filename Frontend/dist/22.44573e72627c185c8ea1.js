(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"49O1":function(t,n){t.exports='<div class="inbox-mail" fxLayout="column" fxFlex="grow">\r\n\r\n  <div class="header" fxFlex="none"\r\n       fxLayout="row" fxLayoutAlign="space-between center"\r\n       fxLayoutAlign.gt-xs="start center">\r\n    <button type="button" mat-icon-button [routerLink]="[\'../../\']" matTooltip="Back to Inbox">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n\r\n    <div class="vertical-divider" fxHide fxShow.gt-xs></div>\r\n\r\n    <button type="button" fxHide fxShow.gt-xs mat-icon-button matTooltip="Archive">\r\n      <mat-icon>archive</mat-icon>\r\n    </button>\r\n\r\n    <button type="button" fxHide fxShow.gt-xs mat-icon-button matTooltip="Mark as Spam">\r\n      <mat-icon>backspace</mat-icon>\r\n    </button>\r\n\r\n    <button type="button" fxHide fxShow.gt-xs mat-icon-button (click)="removeMail()" matTooltip="Delete">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n\r\n    <div class="vertical-divider" [matMenuTriggerFor]="mailOptions" fxHide fxShow.gt-xs></div>\r\n\r\n    <fury-inbox-mail-label-list class="button" [availableLabels]="availableLabels"\r\n                                [labels]="(mail$ | async).labels"\r\n                                (addLabel)="addLabel($event)"\r\n                                (removeLabel)="removeLabel($event)"\r\n                                icon="folder"\r\n                                matTooltip="Move to"\r\n                                fxHide fxShow.gt-xs></fury-inbox-mail-label-list>\r\n\r\n    <fury-inbox-mail-label-list class="button" [availableLabels]="availableLabels"\r\n                                [labels]="(mail$ | async).labels"\r\n                                (addLabel)="addLabel($event)"\r\n                                (removeLabel)="removeLabel($event)"\r\n                                matTooltip="Labels"\r\n                                fxHide fxShow.gt-xs></fury-inbox-mail-label-list>\r\n\r\n    <div class="vertical-divider" fxHide fxShow.gt-xs></div>\r\n\r\n    <button type="button" mat-icon-button>\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <fury-scrollbar>\r\n    <div class="mail-content" fxLayout="column">\r\n      <div class="head" fxFlex="noshrink" fxLayout="row" fxLayoutAlign="space-between start">\r\n        <div fxLayout="column" fxLayoutAlign="start start">\r\n          <div class="subject">{{ (mail$ | async).subject }}</div>\r\n          <div class="labels" fxLayout="row" fxLayoutGap="8px">\r\n            <fury-inbox-mail-label *ngFor="let label of (mail$ | async).labels" [color]="label.color">\r\n              {{ label.name }}\r\n            </fury-inbox-mail-label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="actions" fxLayoutAlign="end center">\r\n          <fury-inbox-mail-star [isStarred]="(mail$ | async).starred"\r\n                                (starred)="toggleStarred()"></fury-inbox-mail-star>\r\n\r\n          <fury-inbox-mail-label-list [availableLabels]="availableLabels"\r\n                                      [labels]="(mail$ | async).labels"\r\n                                      (addLabel)="addLabel($event)"\r\n                                      (removeLabel)="removeLabel($event)"></fury-inbox-mail-label-list>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="info" fxFlex="noshrink" fxLayout="column" fxLayoutAlign="start" fxLayout.gt-xs="row"\r\n           fxLayoutAlign.gt-xs="space-between">\r\n        <div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="16px">\r\n          <img class="picture" src="http://i.pravatar.cc/35?u={{ (mail$ | async).from?.name }}">\r\n\r\n          <div fxLayout="column">\r\n            <div class="from">{{ (mail$ | async).from?.name }}</div>\r\n            <div class="to" fxLayout="row" fxLayoutAlign="start center">\r\n              to {{ (mail$ | async).to?.name }}\r\n              <mat-icon>arrow_drop_down</mat-icon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="extra" fxFlexAlign.xs="end" fxLayout="row" fxLayoutAlign="end center" fxLayoutGap="16px">\r\n          <div class="when">{{ (mail$ | async).when?.fromNow() }}</div>\r\n          <button class="options" [matMenuTriggerFor]="mailOptions" mat-icon-button>\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="content" fxFlex="grow">\r\n        {{ (mail$ | async).content }}\r\n      </div>\r\n\r\n      <div class="reply" fxFlex="noshrink" fxLayout="row" fxLayoutAlign="space-between center" (click)="showReply()"\r\n           *ngIf="!replying">\r\n        <div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="16px">\r\n          <img class="avatar" src="assets/img/avatars/noavatar.png">\r\n          <div class="text">Click to <span class="semi-bold">Reply</span> or <span class="semi-bold">Forward</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxLayout="row" fxLayoutAlign="end center" fxLayoutGap="8px">\r\n          <button type="button" mat-icon-button>\r\n            <mat-icon>reply</mat-icon>\r\n          </button>\r\n\r\n          <button type="button" mat-icon-button>\r\n            <mat-icon>forward</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="replying" *ngIf="replying">\r\n        <quill-editor class="editor" [style]="{ height: \'100px\' }"\r\n                      placeholder="Reply to {{ (mail$ | async).from?.name }}"></quill-editor>\r\n\r\n        <div class="actions" fxLayout="row" fxLayoutAlign="end center" fxLayoutGap="8px">\r\n          <button mat-button (click)="hideReply()">CANCEL</button>\r\n          <button mat-fab color="primary" (click)="hideReply(true)">\r\n            <mat-icon>send</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </fury-scrollbar>\r\n</div>\r\n\r\n<mat-menu #mailOptions="matMenu">\r\n  <button mat-menu-item>\r\n    <mat-icon>markunread_mailbox</mat-icon>\r\n    Mark as unread\r\n  </button>\r\n  <button mat-menu-item>\r\n    <mat-icon>label</mat-icon>\r\n    Labels\r\n  </button>\r\n  <mat-divider></mat-divider>\r\n  <button mat-menu-item>\r\n    <mat-icon>delete</mat-icon>\r\n    Delete\r\n  </button>\r\n</mat-menu>\r\n'},"4NR/":function(t,n){t.exports='/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.label {\n  background: whitesmoke;\n  font: 400 13px/22px Roboto, "Helvetica Neue", sans-serif;\n  padding: 2px 8px;\n  white-space: nowrap; }\n.label .indicator {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%; }\n'},"4PUH":function(t,n){t.exports=""},AeIN:function(t,n){t.exports='<mat-card>\r\n<div matDialogTitle>Confirm your action</div>\r\n\r\n<mat-dialog-content>\r\n  {{ content }}\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align="end">\r\n  <button type="button" mat-button (click)="cancel()">CANCEL</button>\r\n  <button type="button" mat-button color="warn" (click)="confirm()">CONFIRM</button>\r\n</mat-dialog-actions>\r\n</mat-card>\r\n'},ESuQ:function(t,n){t.exports='/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n:host {\n  display: flex;\n  flex-direction: column;\n  flex: 1; }\n.scroll {\n  height: 510px; }\n.inbox-mail-list {\n  max-width: 100%; }\n.inbox-mail-list .header {\n    height: 64px;\n    min-height: 64px;\n    max-height: 64px;\n    padding-left: 24px;\n    padding-right: 24px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n.inbox-mail-list .header .checkbox-menu {\n      color: rgba(0, 0, 0, 0.54); }\n.inbox-mail-list .content .mail {\n    height: 54px;\n    min-height: 54px;\n    max-height: 54px;\n    padding-left: 24px;\n    padding-right: 24px;\n    position: relative;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    transition: all 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n    cursor: pointer;\n    outline: none;\n    font: 400 14px/22px Roboto, "Helvetica Neue", sans-serif; }\n@media screen and (max-width: 599px) {\n      .inbox-mail-list .content .mail {\n        height: auto;\n        max-height: none;\n        padding-top: 12px;\n        padding-bottom: 12px; } }\n@media screen and (min-width: 599px) and (max-width: 959px) {\n      .inbox-mail-list .content .mail {\n        height: auto;\n        max-height: none;\n        padding-top: 12px;\n        padding-bottom: 12px; } }\n.inbox-mail-list .content .mail.read {\n      background: #fafafa; }\n.inbox-mail-list .content .mail.read .from {\n        color: rgba(0, 0, 0, 0.54);\n        font-weight: 400; }\n.inbox-mail-list .content .mail.read .subject {\n        color: rgba(0, 0, 0, 0.54);\n        font-weight: 400; }\n.inbox-mail-list .content .mail.read .content {\n        color: rgba(0, 0, 0, 0.38);\n        font-weight: 400; }\n.inbox-mail-list .content .mail.read .when {\n        color: rgba(0, 0, 0, 0.38);\n        font-weight: 400; }\n.inbox-mail-list .content .mail:hover {\n      background: rgba(0, 0, 0, 0.04); }\n.inbox-mail-list .content .mail .picture {\n      height: 30px;\n      width: 30px;\n      border-radius: 50%;\n      background: whitesmoke; }\n.inbox-mail-list .content .mail .content-container {\n      max-width: calc(100% - 184px);\n      position: relative; }\n@media screen and (max-width: 599px) {\n        .inbox-mail-list .content .mail .content-container {\n          max-width: calc(100% - 124px); } }\n@media screen and (min-width: 599px) and (max-width: 959px) {\n        .inbox-mail-list .content .mail .content-container {\n          max-width: calc(100% - 124px); } }\n.inbox-mail-list .content .mail .content-wrapper {\n      max-width: calc(100% - 218px);\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis; }\n@media screen and (max-width: 599px) {\n        .inbox-mail-list .content .mail .content-wrapper {\n          max-width: none; } }\n@media screen and (min-width: 599px) and (max-width: 959px) {\n        .inbox-mail-list .content .mail .content-wrapper {\n          max-width: none; } }\n.inbox-mail-list .content .mail .from {\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n      color: rgba(0, 0, 0, 0.87);\n      font-weight: 500; }\n.inbox-mail-list .content .mail .subject {\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n      color: rgba(0, 0, 0, 0.87);\n      font-weight: 500; }\n.inbox-mail-list .content .mail .content {\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n      color: rgba(0, 0, 0, 0.54);\n      font-weight: 500; }\n.inbox-mail-list .content .mail .when {\n      color: rgba(0, 0, 0, 0.54);\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n      font-weight: 500; }\n.inbox-mail-list .content .mail .options {\n      color: rgba(0, 0, 0, 0.54); }\n'},"JU/C":function(t,n){t.exports='<div class="scroll" furyScrollbar>\r\n<mat-list fxFlex="grow"  class="navigation">\r\n  <div matSubheader>Inbox</div>\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/primary\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>inbox</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Primary</div>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/social\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>group</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Social</div>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/promotions\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>local_offer</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Promotions</div>\r\n  </mat-list-item>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/starred\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>star</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Starred</div>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/sent\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>send</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Sent Mails</div>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/drafts\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>drafts</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Drafts</div>\r\n  </mat-list-item>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/spam\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>backspace</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Spam</div>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item matRipple [routerLink]="[\'/inbox/trash\']" routerLinkActive="active">\r\n    <mat-icon matListIcon>delete</mat-icon>\r\n    <div matLine [fxHide]="responsive" [fxShow.gt-sm]="responsive">Trash</div>\r\n  </mat-list-item>\r\n</mat-list>\r\n</div>\r\n'},Jrd2:function(t,n){t.exports="/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.mat-icon {\n  color: rgba(0, 0, 0, 0.54); }\n"},MLNT:function(t,n){t.exports='<div class="inbox-mail-list" fxLayout="column" fxFlex="grow">\r\n\t<div class="header" fxLayout="row" fxLayoutAlign="space-between">\r\n\t\t<div fxLayout="row" fxLayoutAlign="start center">\r\n\t\t\t<mat-checkbox></mat-checkbox>\r\n\t\t\t<button class="checkbox-menu" type="button" mat-icon-button [matMenuTriggerFor]="menu">\r\n\t\t\t\t<mat-icon>arrow_drop_down</mat-icon>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t\r\n\t\t<div class="content">\r\n\t\t\t<div class="scroll" furyScrollbar>\r\n\t\t\t<div class="mail " *ngFor="let mail of mails$ | async" [class.read]="mail.read" [routerLink]="[\'../mail\', mail.id]"\r\n\t\t\t\t fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="8px" matRipple>\r\n\t\t\t\t<div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="8px" fxFlex="68px">\r\n\t\t\t\t\t<mat-checkbox class="checkbox" (click)="$event.stopPropagation()"></mat-checkbox>\r\n\t\t\t\t\t<fury-inbox-mail-star [isStarred]="mail.starred" (starred)="toggleStarred(mail)" (click)="$event.stopPropagation()">\r\n\t\t\t\t\t</fury-inbox-mail-star>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="content-container" fxFlex="auto" fxLayout="column" fxLayout.gt-sm="row">\r\n\t\t\t\t\t<div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="16px" fxFlex="auto" fxFlex.gt-sm="210px">\r\n\t\t\t\t\t\t<img class="picture" fxFlex="noshrink" src="http://i.pravatar.cc/30?u={{ mail.from.name }}" fxHide\r\n\t\t\t\t\t\t\t fxShow.gt-sm>\r\n\t\t\t\t\t\t<div class="from" fxFlex="grow" fxLayout="row" fxLayoutAlign="space-between center">\r\n\t\t\t\t\t\t\t{{ mail.from.name }}\r\n\t\t\t\t\t\t\t<div class="when" fxHide.gt-sm>{{ mail.when.fromNow() }}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="content-wrapper" fxLayout="column" fxLayout.gt-sm="row" fxLayoutAlign.gt-sm="start center"\r\n\t\t\t\t\t\t fxLayoutGap="8px" fxFlex="grow">\r\n\t\t\t\t\t\t<div fxLayout="row" fxLayoutGap="8px">\r\n\t\t\t\t\t\t\t<fury-inbox-mail-label *ngFor="let label of mail.labels" [color]="label.color">\r\n\t\t\t\t\t\t\t\t{{ label.name }}\r\n\t\t\t\t\t\t\t</fury-inbox-mail-label>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="subject" fxFlex="noshrink">{{ mail.subject }}</div>\r\n\t\t\t\t\t\t<div class="middot" fxHide fxShow.gt-sm>&middot;</div>\r\n\t\t\t\t\t\t<div class="content">{{ mail.content }}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxLayout="row" fxLayoutAlign="end center" fxFlex="40px" fxFlex.gt-sm="100px">\r\n\t\t\t\t\t<span class="when" fxHide fxShow.gt-sm>{{ mail.when.fromNow() }}</span>\r\n\t\t\t\t\t<button class="options" [matMenuTriggerFor]="mailOptions" mat-icon-button (click)="$event.stopPropagation()">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\t\t<mat-menu #menu="matMenu">\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<span> All </span>\r\n\t\t\t</button>\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<span> Unread </span>\r\n\t\t\t</button>\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<span> Read </span>\r\n\t\t\t</button>\r\n\t\t</mat-menu>\r\n\r\n\t\t<mat-menu #mailOptions="matMenu">\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<mat-icon>markunread_mailbox</mat-icon>\r\n\t\t\t\tMark as unread\r\n\t\t\t</button>\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<mat-icon>label</mat-icon>\r\n\t\t\t\tLabels\r\n\t\t\t</button>\r\n\t\t\t<mat-divider></mat-divider>\r\n\t\t\t<button mat-menu-item>\r\n\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\tDelete\r\n\t\t\t</button>\r\n\t\t</mat-menu>\r\n</div>\r\n'},NBdv:function(t,n){t.exports='<m-portlet>\r\n\t<ng-container mPortletHeadTitle>\r\n\t\t<div class="m-portlet__head-title">\r\n\t\t\t<h3 class="m-portlet__head-text m--font-light">\r\n\t\t\t\tEquation Builder\r\n\t\t\t</h3>\r\n\t\t</div>\r\n\t</ng-container>\r\n\t<ng-container mPortletHeadTools>\r\n\t\t<button mat-icon-button mat-dialog-close>\r\n\t\t\t<mat-icon style="margin-top:3px;">clear</mat-icon>\r\n\t\t</button>\r\n\t</ng-container>\r\n\t<ng-container mPortletBody>\r\n\t\t<mat-dialog-content fxLayout="column">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>From</mat-label>\r\n\t\t\t\t<input value="davidsmith@example.com" matInput disabled>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>To</mat-label>\r\n\t\t\t\t<input matInput required>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Subject</mat-label>\r\n\t\t\t\t<input matInput>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<quill-editor [style]="{ height: \'100px\' }"\r\n\t\t\t\t\t\t  placeholder="Write your message"></quill-editor>\r\n\t\t</mat-dialog-content>\r\n\t\t<mat-dialog-actions align="end" fxLayout="row" fxLayoutAlign="end center" fxLayoutGap="24px">\r\n\t\t\t<button type="button" mat-icon-button>\r\n\t\t\t\t<mat-icon>attach_file</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button type="button" mat-raised-button color="primary" (click)="dialogRef.close()">\r\n\t\t\t\tSEND\r\n\t\t\t</button>\r\n\t\t</mat-dialog-actions>\r\n\t\t</ng-container>\r\n</m-portlet>\r\n'},QxYq:function(t,n){t.exports='<button type="button" mat-icon-button [matMenuTriggerFor]="labelMenu">\r\n  <mat-icon>{{ icon }}</mat-icon>\r\n</button>\r\n\r\n<mat-menu #labelMenu="matMenu" class="fury-inbox-mail-label-list-menu">\r\n  <div class="fury-inbox-mail-label-list-menu-subheading" (click)="$event.stopPropagation()">Create Label</div>\r\n  <form [formGroup]="labelGroup" (submit)="createLabel()" (click)="$event.stopPropagation()">\r\n    <div class="fury-inbox-mail-label-list-create" fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="8px">\r\n      <mat-form-field fxFlex="30%" class="fury-inbox-mail-label-list-color">\r\n        <mat-label>Color</mat-label>\r\n        <mat-select panelClass="fury-inbox-mail-label-list-color-select" formControlName="color">\r\n          <mat-option *ngFor="let color of colors$ | async" [value]="color.code">\r\n            <span class="fury-inbox-mail-label-list-color-select-indicator" [style.background]="color.code"></span>\r\n            <span>{{ color.name }}</span>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field fxFlex="70%" class="fury-inbox-mail-label-list-name">\r\n        <mat-label>Label Name</mat-label>\r\n        <input matInput formControlName="name">\r\n      </mat-form-field>\r\n      <button type="submit" mat-icon-button color="primary" [disabled]="labelGroup.invalid">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </div>\r\n  </form>\r\n\r\n  <div class="fury-inbox-mail-label-list-menu-subheading" (click)="$event.stopPropagation()"\r\n       *ngIf="availableLabels?.length > 0">Use an Existing Label\r\n  </div>\r\n  <button *ngFor="let label of availableLabels" mat-menu-item (click)="selectLabelButton($event, label)">\r\n    <mat-checkbox [checked]="labelSelected(label)" (change)="selectLabel($event, label)"></mat-checkbox>\r\n    {{ label.name }}\r\n  </button>\r\n</mat-menu>\r\n'},"Ws/X":function(t,n,e){"use strict";e.r(n);var o=e("Ip0R"),i=e("CcnG"),r=e("gIcY"),a=e("N+g+"),l=e("Jhup"),c=e("F4i+"),s=e("o3x0"),m=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},p=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},d=function(){function t(t){this.dialogRef=t}return t.prototype.ngOnInit=function(){},t=m([Object(i.Component)({selector:"fury-inbox-compose",template:e("NBdv"),styles:[e("4PUH")]}),p("design:paramtypes",[s.e])],t)}(),f=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},u=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},b=function(t,n){return function(e,o){n(e,o,t)}},x=function(){function t(t,n){this.options=t,this.dialogRef=n}return t.prototype.ngOnInit=function(){this.content=this.options.content},t.prototype.cancel=function(){this.dialogRef.close(!1)},t.prototype.confirm=function(){this.dialogRef.close(!0)},t=f([Object(i.Component)({selector:"fury-inbox-mail-confirm-dialog",template:e("AeIN"),styles:[e("lxEf")]}),b(0,Object(i.Inject)(s.a)),u("design:paramtypes",[Object,s.e])],t)}(),h=e("F/XL"),g=e("67Y/"),v=e("TR+w"),y=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},w=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},L=function(){function t(){var t=this;this.mails=v.a,this.availableLabels=[],this.mails.forEach(function(n){n.labels.forEach(function(n){t.availableLabels.find(function(t){return t.name===n.name})||t.availableLabels.push(n)})})}return t.prototype.getStarred=function(){return Object(h.a)(this.mails).pipe(Object(g.a)(function(t){return t.filter(function(t){return t.starred})}))},t.prototype.getGroup=function(t){return Object(h.a)(this.mails).pipe(Object(g.a)(function(n){return n.filter(function(n){return n.group===t})}))},t.prototype.getMail=function(t){return Object(h.a)(this.mails).pipe(Object(g.a)(function(n){return n.find(function(n){return n.id===t})}))},t.prototype.toggleStarred=function(t){var n=this.find(t);n&&(n.starred=!t.starred)},t.prototype.addLabel=function(t,n){var e=this.find(n);e&&(e.labels.find(function(n){return n===t})||(e.labels.push(t),this.addToAvailableIfNotExists(t)))},t.prototype.addToAvailableIfNotExists=function(t){-1===this.availableLabels.indexOf(t)&&this.availableLabels.push(t)},t.prototype.removeLabel=function(t,n){var e=this.find(n);if(e){var o=e.labels.findIndex(function(n){return n===t});o>-1&&e.labels.splice(o,1)}},t.prototype.removeMail=function(t){var n=this.mails.findIndex(function(n){return n===t});n>-1&&(this.mails.splice(n,1),this.lastRemovedMail=t,this.lastRemovedMailIndex=n)},t.prototype.undoRemove=function(){return!(!this.lastRemovedMail||!this.lastRemovedMailIndex)&&(this.mails.splice(this.lastRemovedMailIndex,0,this.lastRemovedMail),this.lastRemovedMail)},t.prototype.find=function(t){return this.mails.find(function(n){return n.id===t.id})},t.prototype.getLabelColors=function(){return Object(h.a)(v.b)},t=y([Object(i.Injectable)(),w("design:paramtypes",[])],t)}(),k=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},R=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},O=function(){function t(t,n){this.inboxService=t,this.fb=n,this.icon="label",this.addLabel=new i.EventEmitter,this.removeLabel=new i.EventEmitter}return t.prototype.ngOnInit=function(){this.labelGroup=this.fb.group({color:[null,r.m.required],name:[null,r.m.required]}),this.colors$=this.inboxService.getLabelColors()},t.prototype.selectLabel=function(t,n){t.value?this.addLabel.emit(n):this.removeLabel.emit(n)},t.prototype.selectLabelButton=function(t,n){t&&t.stopPropagation(),this.labelSelected(n)?this.removeLabel.emit(n):this.addLabel.emit(n)},t.prototype.labelSelected=function(t){return this.labels.indexOf(t)>-1},t.prototype.createLabel=function(){var t=this,n=this.labelGroup.value;this.addLabel.emit(n),setTimeout(function(){t.labelGroup.markAsPristine(),t.labelGroup.markAsUntouched(),t.form.resetForm(),t.labelGroup.reset()},10)},k([Object(i.Input)(),R("design:type",Object)],t.prototype,"icon",void 0),k([Object(i.Input)(),R("design:type",Array)],t.prototype,"availableLabels",void 0),k([Object(i.Input)(),R("design:type",Array)],t.prototype,"labels",void 0),k([Object(i.Output)(),R("design:type",Object)],t.prototype,"addLabel",void 0),k([Object(i.Output)(),R("design:type",Object)],t.prototype,"removeLabel",void 0),k([Object(i.ViewChild)(r.f),R("design:type",r.f)],t.prototype,"form",void 0),t=k([Object(i.Component)({selector:"fury-inbox-mail-label-list",template:e("QxYq"),styles:[e("Jrd2")]}),R("design:paramtypes",[L,r.c])],t)}(),j=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},S=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},A=function(){function t(){}return t.prototype.ngOnInit=function(){},j([Object(i.Input)(),S("design:type",String)],t.prototype,"color",void 0),t=j([Object(i.Component)({selector:"fury-inbox-mail-label",template:e("aITY"),styles:[e("4NR/")]}),S("design:paramtypes",[])],t)}(),C=e("ZYCi"),I=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},F=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},M=function(){function t(t,n){this.route=t,this.inboxService=n}return t.prototype.ngOnInit=function(){var t=this;this.route.paramMap.subscribe(function(n){"starred"===n.get("category")?t.mails$=t.inboxService.getStarred().pipe(Object(g.a)(function(t){return t.sort(function(t,n){return n.when-t.when})})):t.mails$=t.inboxService.getGroup(n.get("category")).pipe(Object(g.a)(function(t){return t.sort(function(t,n){return n.when-t.when})}))})},t.prototype.toggleStarred=function(t){this.inboxService.toggleStarred(t)},t=I([Object(i.Component)({selector:"fury-inbox-mail-list",template:e("MLNT"),styles:[e("ESuQ")]}),F("design:paramtypes",[C.ActivatedRoute,L])],t)}(),P=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},N=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},H=function(){function t(){this.starred=new i.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.emitClick=function(){this.starred.emit()},P([Object(i.Input)(),N("design:type",Boolean)],t.prototype,"isStarred",void 0),P([Object(i.Output)(),N("design:type",Object)],t.prototype,"starred",void 0),t=P([Object(i.Component)({selector:"fury-inbox-mail-star",template:e("wfyr"),styles:[e("YimA")]}),N("design:paramtypes",[])],t)}(),T=e("vARd"),$=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},D=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},G=function(){function t(t,n,e,o,i){this.route=t,this.inboxService=n,this.dialog=e,this.router=o,this.snackbar=i}return t.prototype.ngOnInit=function(){var t=this;this.availableLabels=this.inboxService.availableLabels,this.route.paramMap.subscribe(function(n){t.id=n.get("id"),t.mail$=t.inboxService.getMail(t.id),t.inboxService.getMail(t.id).subscribe(function(n){t._mail=n})})},t.prototype.toggleStarred=function(){this.inboxService.toggleStarred(this._mail)},t.prototype.addLabel=function(t){this.inboxService.addLabel(t,this._mail)},t.prototype.removeLabel=function(t){this.inboxService.removeLabel(t,this._mail)},t.prototype.removeMail=function(){var t=this;this.dialog.open(x,{data:{content:"Are you sure you want to delete this mail?"}}).afterClosed().subscribe(function(n){n&&(t.inboxService.removeMail(t._mail),t.router.navigate(["../../"],{relativeTo:t.route}),t.snackbar.open("You deleted the mail from: "+t._mail.from.name,"UNDO",{duration:3e3}).onAction().subscribe(function(){var n=t.inboxService.undoRemove();n?(t.router.navigate(["/apps/inbox/mail",n.id]),t.snackbar.open("Restored your mail from: "+n.from.name,null,{duration:3e3})):t.snackbar.open("Could not UNDO last delete action. Sorry!",null,{duration:3e3})}))})},t.prototype.showReply=function(){this.replying=!0},t.prototype.hideReply=function(t){this.replying=!1,t&&this.snackbar.open("You replied to "+this._mail.from.name,"UNDO",{duration:3e3})},t=$([Object(i.Component)({selector:"fury-inbox-mail",template:e("49O1"),styles:[e("t55+")]}),D("design:paramtypes",[C.ActivatedRoute,L,s.c,C.Router,T.b])],t)}(),_=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},E=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},Y=function(){function t(){}return t.prototype.ngOnInit=function(){},_([Object(i.Input)(),E("design:type",Boolean)],t.prototype,"responsive",void 0),t=_([Object(i.Component)({selector:"fury-inbox-navigation",template:e("JU/C"),styles:[e("n8mP")]}),E("design:paramtypes",[])],t)}(),q=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},U=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},B=function(){function t(t){this.dialog=t}return t.prototype.ngOnInit=function(){},t.prototype.openCompose=function(){this.dialog.open(d)},t=q([Object(i.Component)({selector:"fury-inbox",template:e("ssvk"),styles:[e("xpjO")]}),U("design:paramtypes",[s.c])],t)}(),W=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},J=[{path:"",component:B,children:[{path:"",redirectTo:"primary",pathMatch:"full"},{path:":category",component:M},{path:"mail/:id",component:G}],data:{scrollbarDisabled:!0}}],z=function(){function t(){}return t=W([Object(i.NgModule)({imports:[C.RouterModule.forChild(J)],exports:[C.RouterModule]})],t)}(),Q=e("uJLt");e.d(n,"InboxModule",function(){return V});var X=function(t,n,e,o){var i,r=arguments.length,a=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(a=(r<3?i(a):r>3?i(n,e,a):i(n,e))||a);return r>3&&a&&Object.defineProperty(n,e,a),a},V=function(){function t(){}return t=X([Object(i.NgModule)({imports:[o.CommonModule,z,l.a,r.l,a.a,c.a,Q.a],declarations:[B,Y,M,G,A,H,O,x,d],entryComponents:[x,d],providers:[L],exports:[c.a]})],t)}()},YimA:function(t,n){t.exports="/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.star {\n  color: rgba(0, 0, 0, 0.54); }\n.star.active {\n    color: #ffc107; }\n"},aITY:function(t,n){t.exports='<div class="label" fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="6px">\r\n  <div class="indicator" [style.background]="color"></div>\r\n  <div class="label-name">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n'},lxEf:function(t,n){t.exports=""},n8mP:function(t,n){t.exports="/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.scroll {\n  height: 510px; }\n.navigation {\n  margin-top: 24px; }\n.navigation .mat-list-item {\n    cursor: pointer;\n    color: rgba(0, 0, 0, 0.54);\n    margin-top: 8px;\n    margin-bottom: 8px;\n    position: relative;\n    outline: none; }\n.navigation .mat-list-item .mat-line {\n      font-weight: 500; }\n.navigation .mat-list-item.active {\n      color: #455a64;\n      background: rgba(0, 0, 0, 0.04); }\n.navigation .mat-list-item:hover {\n      background: rgba(0, 0, 0, 0.04); }\n.navigation .mat-divider {\n    margin-top: 8px;\n    margin-bottom: 8px; }\n"},ssvk:function(t,n){t.exports='<div class="inbox" fxLayout="column">\r\n\r\n  <mat-drawer-container class="drawer-container" fxFlex="grow">\r\n\r\n    <mat-drawer mode="over" #drawer>\r\n      <div class="drawer-navigation">\r\n        <fury-inbox-navigation></fury-inbox-navigation>\r\n      </div>\r\n    </mat-drawer>\r\n\r\n    <mat-drawer-content fxLayout="column">\r\n      <div class="header" fxFlex="none" fxLayout="column" fxLayout.gt-xs="row">\r\n        <div class="logo" fxFlex="auto" fxFlex.sm="116px" fxFlex.gt-sm="250px"\r\n             fxLayout="row" fxLayoutAlign="start center" fxLayoutAlign.sm="center center">\r\n          <button fxHide.gt-xs type="button" mat-icon-button (click)="drawer.open()">\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n          <mat-icon fxHide fxShow.gt-xs>mail</mat-icon>\r\n          <span fxHide.sm>Inbox</span>\r\n        </div>\r\n\r\n        <div class="search-bar" fxLayout="row" fxFlex="grow">\r\n          <div fxLayout="row" fxLayoutAlign="center center">\r\n            <mat-icon>search</mat-icon>\r\n          </div>\r\n          <input class="search" fxFlex="grow" type="search" placeholder="Search...">\r\n        </div>\r\n      </div>\r\n\r\n      <div class="page-container" fxFlex="grow" fxLayout="row">\r\n        <div class="navigation-container" fxHide fxShow.gt-xs\r\n             fxFlex="116px" fxFlex.gt-sm="250px"\r\n             fxLayout="column">\r\n          <div class="compose" fxFlex="0 0 auto" fxLayout="row" fxLayoutAlign="center center">\r\n            <button type="button" fxFlex mat-raised-button color="primary" fxHide fxShow.gt-sm (click)="openCompose()">\r\n              <mat-icon class="icon">edit</mat-icon>\r\n              Compose\r\n            </button>\r\n            <button type="button" mat-mini-fab color="primary" fxHide.gt-sm>\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <fury-inbox-navigation [responsive]="true"></fury-inbox-navigation>\r\n        </div>\r\n\r\n        <div class="content" fxLayout="column" fxFlex="auto">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n</div>\r\n'},"t55+":function(t,n){t.exports='/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n:host {\n  display: flex;\n  flex-direction: column;\n  flex: 1; }\n.inbox-mail .header {\n  height: 64px;\n  padding-left: 8px;\n  padding-right: 8px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n.inbox-mail .header .mat-icon-button, .inbox-mail .header .button {\n    margin-left: 8px;\n    margin-right: 8px;\n    color: rgba(0, 0, 0, 0.54); }\n.inbox-mail .header .vertical-divider {\n    width: 1px;\n    height: calc(100% - 24px);\n    background: rgba(0, 0, 0, 0.12);\n    margin: 12px 8px; }\n.inbox-mail .mail-content ::ng-deep .scroll-content {\n  display: flex;\n  flex-direction: column;\n  flex: 1; }\n.inbox-mail .head {\n  padding: 24px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n.inbox-mail .head .subject {\n    font: 500 20px/32px Roboto, "Helvetica Neue", sans-serif; }\n.inbox-mail .head .actions .mat-icon {\n    color: rgba(0, 0, 0, 0.54); }\n.inbox-mail .info {\n  padding: 24px; }\n.inbox-mail .info .picture {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%; }\n.inbox-mail .info .from {\n    font: 400 16px/24px Roboto, "Helvetica Neue", sans-serif;\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis; }\n.inbox-mail .info .to {\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    color: rgba(0, 0, 0, 0.54);\n    font: 400 14px/22px Roboto, "Helvetica Neue", sans-serif; }\n.inbox-mail .info .to .mat-icon {\n      color: rgba(0, 0, 0, 0.54); }\n.inbox-mail .info .extra .when {\n    color: rgba(0, 0, 0, 0.54);\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis; }\n.inbox-mail .info .extra .options {\n    color: rgba(0, 0, 0, 0.54); }\n.inbox-mail .content {\n  padding: 0 24px 24px; }\n.inbox-mail .reply {\n  padding: 24px;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  cursor: pointer; }\n.inbox-mail .reply .mat-icon {\n    color: rgba(0, 0, 0, 0.54); }\n.inbox-mail .replying {\n  padding: 24px;\n  border-top: 1px solid rgba(0, 0, 0, 0.12); }\n.inbox-mail .replying .actions {\n    margin-top: 24px; }\n'},wfyr:function(t,n){t.exports='<button type="button" mat-icon-button (click)="emitClick()">\r\n  <mat-icon *ngIf="!isStarred" class="star">star_outline</mat-icon>\r\n  <mat-icon *ngIf="isStarred" class="star active">star</mat-icon>\r\n</button>\r\n'},xpjO:function(t,n){t.exports='/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.inbox {\n  height: 100%;\n  min-height: 100%;\n  max-height: 100%;\n  width: 100%;\n  min-width: 100%;\n  max-width: 100%; }\n.inbox .drawer-navigation {\n    padding: 0 24px;\n    overflow: hidden; }\n.inbox .header {\n    padding: 48px 24px 112px 0;\n    background: #2196f3 url("/assets/img/backgrounds/inbox.png");\n    background-size: cover;\n    z-index: 10;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n@media screen and (max-width: 599px) {\n      .inbox .header {\n        padding: 8px 8px 72px; } }\n.inbox .header .logo {\n      color: white;\n      padding-left: 24px;\n      font: 400 28px/34px Roboto, "Helvetica Neue", sans-serif; }\n.inbox .header .logo .mat-icon {\n        padding-right: 12px; }\n@media screen and (min-width: 599px) and (max-width: 959px) {\n        .inbox .header .logo {\n          padding-left: 0; }\n          .inbox .header .logo .mat-icon {\n            padding-right: 0; } }\n@media screen and (max-width: 599px) {\n        .inbox .header .logo {\n          padding-left: 0;\n          margin-bottom: 8px; } }\n.inbox .header .search-bar {\n      background: white;\n      border-radius: 3px;\n      overflow: hidden;\n      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n.inbox .header .search-bar .mat-icon {\n        vertical-align: middle;\n        margin-right: 14px;\n        margin-left: 16px; }\n.inbox .header .search-bar .search {\n        border: 0;\n        height: 54px;\n        outline: none; }\n.inbox .page-container {\n    margin-top: -64px;\n    background: #f0f0f0; }\n.inbox .navigation-container {\n    padding: 0 24px 24px;\n    z-index: 20; }\n.inbox .navigation-container .compose {\n      height: 64px; }\n.inbox .navigation-container .compose .icon {\n        margin-left: -24px;\n        padding-right: 8px; }\n.inbox .content {\n    background: white;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    margin-right: 24px;\n    margin-bottom: 24px;\n    border-radius: 3px;\n    max-width: calc(100% - 274px);\n    z-index: 20; }\n@media screen and (max-width: 599px) {\n      .inbox .content {\n        margin: 0 8px 8px;\n        max-width: calc(100% - 16px); } }\n@media screen and (min-width: 599px) and (max-width: 959px) {\n      .inbox .content {\n        max-width: calc(100% - 140px); } }\n'}}]);